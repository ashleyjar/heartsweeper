preloadImages();Vue.component("game-over-menu",{data:function(){return{}},props:{winOrLose:String,time:Number},methods:{message:function(){return"win"==this.winOrLose?"Congratulations, you win!":"Sorry, you lose!"}},template:'\n  \t<div><h3>{{message()}}</h3>\n    <p>Time: {{time}} seconds</p>\n\n   <p class="modal-footer">\n   <button class="modal-default-button" @click="$emit(\'close\')">Close</button>\n\n    <button class="modal-default-button" @click="$emit(\'play\')">Play Again</button>\n    </p>\n    </div>\n  '});
Vue.component("settings-menu",{data:function(){return{difficulty:"easy"}},props:{level:String},beforeMount:function(){this.difficulty=this.level},template:'<div>\n  <h3>Change Level for Next Game</h3>\n\n <p>\n <input name="diff" type="radio" id="easy" value="easy" v-model="difficulty" class="modal-input">\n  <label for="easy" class="modal-label">Easy: 10 Hearts - 9 x 9 tiles</label>\n  <input name="diff" type="radio" id="medium" value="medium" v-model="difficulty" class="modal-input">\n  <label for="medium" class="modal-label">Medium: 40 Hearts - 16 x 16 tiles</label>\n  <input name="diff" type="radio" id="hard" value="hard" v-model="difficulty" class="modal-input">\n  <label for="hard" class="modal-label">Hard: 99 Hearts - 16 x 30 tiles</label>\n  </p>\n  <p class="modal-footer">\n  <button class="modal-default-button" @click="$emit(\'close\')">Cancel</button>\n  <button class="modal-default-button" @click="$emit(\'save\', difficulty)">Save</button>\n                   </p>\n                        </div>'});
Vue.component("help-menu",{data:function(){return{}},template:'<div><h3>How to play Heartsweeper</h3>\n<p>Click any square to open it. If the square contains a heart, you lose. Your first click is safe. To win, open all the heart free squares without clicking any hearts.</p>\n\n<h3>Tips:</h3><ul>\n<li>The numbers show how many hearts are in the eight surrounding squares. You can use this to decide which squares contain hearts.</li><li>If you think a square contains a heart, right-click or Ctrl+Click it.  This puts a flag on the square. Right-click again to make the flag a question mark, and again to set the square back to normal. </li><li>If you\'ve flagged all the hearts by a number, double-click or Shift+Click it. This will open the rest of the surrounding squares. </li></ul>\n\n<p class="modal-footer">\n   <button class="modal-default-button" @click="$emit(\'close\')">Close</button>\n    </p>\n\n</div>\n'});
Vue.component("modal",{template:'\n    <transition name="modal" id="modal-template">\n    <div class="modal-mask" @click.self="$emit(\'close\')">\n      <div class="modal-container">\n\t\t\t\t<slot name="screen"></slot>\n      </div>\n    </div>\n  </transition>\n  '});
new Vue({el:"#game-board",data:{board:[],gameStarted:!1,heartLocations:0,coveredTiles:0,heartsLeft:0,clockTime:0,gameStart:new Date,timerID:0,gameEnded:!1,rows:9,columns:9,hearts:10,tileKey:0,difficulty:"easy",showModal:!1,type:"settings",gameResults:{winOrLose:"win",time:0}},created:function(){this.coveredTiles=this.rows*this.columns-this.hearts;this.heartsLeft=this.hearts;for(var a=0;a<this.rows*this.columns;a++)this.board.push({id:a,isHeart:!1,heartsNearby:0,flagsNearby:0,endOfRow:0==a%this.columns,
state:"HIDDEN",wrong:!1,hover:!1})},beforeDestroy:function(){clearTimeout(this.timerID)},methods:{openModal:function(a,b){this.showModal=!0;this.type=a;"end"==a&&(this.gameResults.winOrLose=b[0],this.gameResults.time=b[1])},updateDifficulty:function(a){this.difficulty=a;this.showModal=!1},leftClick:function(a){if("HIDDEN"==a.state&&0==this.gameEnded){0==this.gameStarted&&(this.gameStart=new Date,this.calculateTime(),this.fillInBoard(a.id),this.gameStarted=!0);if(1==a.isHeart){clearTimeout(this.timerID);
a.state="BROKEN";this.gameEnded=!0;for(a=0;a<this.rows*this.columns;a++)1==this.board[a].isHeart&&(this.board[a].state="BROKEN"),0==this.board[a].isHeart&&"FLAG"==this.board[a].state&&(this.board[a].state="WRONG");this.openModal("end",["Lose",this.clockTime,this.gameStart])}else if(a.state=a.heartsNearby,--this.coveredTiles,0==a.heartsNearby)for(a=this.neighboringSquares(a.id);0<a.length;){neighborPos=a.pop();var b=this.board.find(function(a){return a.id==neighborPos});"HIDDEN"==b.state&&(b.state=
b.heartsNearby,--this.coveredTiles,0==b.heartsNearby&&(b=this.neighboringSquares(b.id),a=a.concat(b)))}if(0==this.coveredTiles){clearTimeout(this.timerID);this.gameEnded=!0;for(a=0;a<this.rows*this.columns;a++)1==this.board[a].isHeart&&(this.board[a].state="HEART");this.heartsLeft=0;this.openModal("end",["win",this.clockTime,this.gameStart])}}},rightClick:function(a){if(0==this.gameEnded){var b=this.neighboringSquares(a.id);switch(a.state){case "HIDDEN":--this.heartsLeft;a.state="FLAG";for(a={$jscomp$loop$prop$q$7:0};a.$jscomp$loop$prop$q$7<
b.length;a={$jscomp$loop$prop$q$7:a.$jscomp$loop$prop$q$7},a.$jscomp$loop$prop$q$7++){var c=this.board.find(function(a){return function(c){return c.id==b[a.$jscomp$loop$prop$q$7]}}(a));c.flagsNearby+=1}break;case "FLAG":this.heartsLeft+=1;for(c=0;c<b.length;c++){var d=this.board[b[c]];--d.flagsNearby}a.state="QUESTION";break;case "QUESTION":a.state="HIDDEN"}}},dblClick:function(a){if(0==this.gameEnded)switch(a.state){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:if(a.flagsNearby==a.heartsNearby)for(var b=
this.neighboringSquares(a.id);0<b.length;){var c=b.pop();"FLAG"!=this.board[c].state&&this.leftClick(this.board[c])}else a.wrong=!0,this.$nextTick(function(){a.wrong=!1})}},fillInBoard:function(a){var b=[];b=this.neighboringSquares(a);b.push(a);a=0;for(var c={};a<this.hearts;){c.$jscomp$loop$prop$heartPos$9=Math.floor(Math.random()*this.rows*this.columns);if(!b.includes(c.$jscomp$loop$prop$heartPos$9)){var d=this.board.find(function(a){return function(b){return b.id==a.$jscomp$loop$prop$heartPos$9}}(c));
if(!d.isHeart)for(d.isHeart=!0,a++,c.$jscomp$loop$prop$neighbors$10=this.neighboringSquares(c.$jscomp$loop$prop$heartPos$9),d={$jscomp$loop$prop$q$12:0};d.$jscomp$loop$prop$q$12<c.$jscomp$loop$prop$neighbors$10.length;d={$jscomp$loop$prop$q$12:d.$jscomp$loop$prop$q$12},d.$jscomp$loop$prop$q$12++){var e=this.board.find(function(a,b){return function(c){return c.id==a.$jscomp$loop$prop$neighbors$10[b.$jscomp$loop$prop$q$12]}}(c,d));e.heartsNearby+=1}}c={$jscomp$loop$prop$heartPos$9:c.$jscomp$loop$prop$heartPos$9,
$jscomp$loop$prop$neighbors$10:c.$jscomp$loop$prop$neighbors$10}}},neighboringSquares:function(a){var b=[];a=parseInt(a);var c=a<this.rows*this.columns-this.columns,d=0!=a%this.columns,e=0!=(a+1)%this.columns;a>=this.columns&&(d&&b.push(a-(this.columns+1)),b.push(a-this.columns),e&&b.push(a-(this.columns-1)));d&&b.push(a-1);e&&b.push(a+1);c&&(d&&b.push(a+(this.columns-1)),b.push(a+this.columns),e&&b.push(a+(this.columns+1)));return b},getLeftNeighbor:function(a,b){return a-b},getRightNeighbor:function(a,
b){return a+b},isCovered:function(a){switch(a.state){case "HIDDEN":case "FLAG":case "QUESTION":case "HEART":return this.gameEnded?!1:!0;default:return!1}},isRevealed:function(a){switch(a.state){case "HIDDEN":case "FLAG":case "QUESTION":case "HEART":return!1;default:return!0}},isOver:function(a){if(this.gameEnded)switch(a.state){case "HIDDEN":case "FLAG":case "QUESTION":case "HEART":return!0;default:return!1}else return!1},heartCountDisplay:function(){return 0>this.heartsLeft?0:this.heartsLeft},clockTimeDisplay:function(){return 9999<
this.clockTime?"9999":this.formatTime(this.clockTime)},calculateTime:function(){this.clockTime=Math.floor(Math.abs(new Date-this.gameStart)/1E3);this.timerID=setTimeout(this.calculateTime,500)},formatTime:function(a){10>a&&(a="0"+a);100>a&&(a="0"+a);1E3>a&&(a="0"+a);return a},startNewGame:function(){this.showModal=!1;for(var a=0,b=this.board.length;a<b;a++)this.board[a].state="HIDDEN";this.board=[];clearTimeout(this.timerID);this.gameStarted=!1;this.clockTime=this.heartsLeft=this.coveredTiles=this.heartLocations=
0;this.gameStart=new Date;this.timerID=0;this.gameEnded=!1;"easy"==this.difficulty&&(this.columns=this.rows=9,this.hearts=10,this.coveredTiles=71);"medium"==this.difficulty&&(this.columns=this.rows=16,this.hearts=40,this.coveredTiles=216);"hard"==this.difficulty&&(this.rows=16,this.columns=30,this.hearts=99,this.coveredTiles=381);this.heartsLeft=this.hearts;a=0;for(b=this.rows*this.columns;a<b;a++)this.board.push({id:a,isHeart:!1,heartsNearby:0,flagsNearby:0,endOfRow:0==a%this.columns,state:"HIDDEN",
wrong:!1,hover:!1})}},template:'<div>\n                       <div>\n      <modal v-if="showModal" @close="showModal = false">\n        <div slot="screen" v-if="type == \'end\'">\n          <game-over-menu @close="showModal = false" @play="startNewGame" v-bind="gameResults"></game-over-menu>\n        </div>\n        <div slot="screen" v-else-if="type == \'settings\'">\n          <settings-menu @close="showModal = false" @save="updateDifficulty" v-bind:level="difficulty"></settings-menu>\n        </div>\n        <div slot="screen" v-else-if="type == \'help\'">\n          <help-menu @close="showModal = false"></help-menu>\n        </div>\n      </modal>\n    </div>\n                        <div  v-bind:style="{\'min-width\':columns*34+\'px\',\'display\': \'inline-block\', \'background\':\'#f5fffa\', \'border\':\'4px solid rgb(243, 200, 175)\', \'box-shadow\': \'0 2px 2px 0 rgb(243, 200, 175)\'}">\n                        <div class="top" v-bind:style="{\'min-width\':((columns*34)-2)+\'px\'}">\n                          <div class="menuCol"><button class="menuButtons" v-on:click="startNewGame()">New Game</button></div>\n                          <div class="menuCol"><button class="menuButtons" v-on:click="openModal(\'settings\')">Settings</button></div>\n                          <div class="menuCol"><button class="menuButtons" v-on:click="openModal(\'help\')">Help</button></div>\n                        </div>\n                        <div class="square"\n                        v-for="(tile, position) in board"\n\n\n                        v-on:click.left.exact="leftClick(tile)"\n                        v-on:click.left.ctrl.exact="rightClick(tile)"\n                        v-on:click.left.shift.exact="dblClick(tile)"\n                        v-on:click.right.prevent="rightClick(tile)"\n                        v-on:dblclick="dblClick(tile)"\n                        v-bind:class="{end: tile.endOfRow, covered: isCovered(tile), revealed: isRevealed(tile), over: isOver(tile)}"\n\n                       >\n                          <img v-bind:src="\'images/\'+tile.state+\'.png\'" >\n                          <transition name="flashx">\n                            <img v-if="tile.wrong" src="images/X.png" class="blinking-x">\n                          </transition>\n                        </div>\n                        <div class="bottom" v-bind:style="{\'min-width\':((columns*34)-2)+\'px\'}">\n                          <div class="time"><img class="clockImg" src="images/clock.png"><div class="time-counter">{{clockTimeDisplay()}}</div></div>\n                          <div class="hearts "><div class="heart-counter">{{heartCountDisplay()}}</div><img class="heartImg" src="images/hearts.png"></div>\n                        </div>\n                      </div>\n                    </div>'});
function preloadImages(){img1=new Image;img2=new Image;img3=new Image;img4=new Image;img5=new Image;img6=new Image;img7=new Image;img8=new Image;img9=new Image;img10=new Image;img11=new Image;img12=new Image;img13=new Image;img14=new Image;img15=new Image;img16=new Image;img17=new Image;img18=new Image;img1.src="images/0.PNG";img2.src="images/1.PNG";img3.src="images/2.PNG";img4.src="images/3.PNG";img5.src="images/4.PNG";img6.src="images/5.PNG";img7.src="images/6.PNG";img8.src="images/7.PNG";img9.src=
"images/8.PNG";img10.src="images/BROKEN.PNG";img11.src="images/CLOCK.PNG";img12.src="images/FLAG.PNG";img13.src="images/HEART.PNG";img14.src="images/HEARTS.PNG";img15.src="images/HIDDEN.PNG";img16.src="images/QUESTION.PNG";img17.src="images/WRONG.PNG";img18.src="images/X.PNG"};